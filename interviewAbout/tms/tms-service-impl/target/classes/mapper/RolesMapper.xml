<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ksit.tms.mapper.RolesMapper">
    <resultMap id="BaseResultMap" type="com.ksit.tms.entity.Roles">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="roles_name" jdbcType="VARCHAR" property="rolesName"/>
        <result column="roles_code" jdbcType="VARCHAR" property="rolesCode"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, roles_name, roles_code, create_time, update_time
  </sql>
    <select id="selectByExample" parameterType="com.ksit.tms.entity.RolesExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_roles
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_roles
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_roles
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.ksit.tms.entity.RolesExample">
        delete from t_roles
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ksit.tms.entity.Roles">
    insert into t_roles (id, roles_name, roles_code, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{rolesName,jdbcType=VARCHAR}, #{rolesCode,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.ksit.tms.entity.Roles" useGeneratedKeys="true" keyProperty="id">
        insert into t_roles
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="rolesName != null">
                roles_name,
            </if>
            <if test="rolesCode != null">
                roles_code,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="rolesName != null">
                #{rolesName,jdbcType=VARCHAR},
            </if>
            <if test="rolesCode != null">
                #{rolesCode,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ksit.tms.entity.RolesExample" resultType="java.lang.Long">
        select count(*) from t_roles
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>


    <select id="selectAllWithPermission" resultMap="RolesWithType">
        SELECT
            t_roles.*, t_permission.id AS permissionId,
            t_permission.create_time AS permissionCreateTime,
            t_permission.permission_code AS permissionCode,
            t_permission.permission_name AS permissionName,
            t_permission.permission_type AS permissionType,
            t_permission.permission_url AS permissionUrl,
            t_permission.update_time AS permissionUpdateTime,
            t_permission.parent_id AS parentId
        FROM
            t_roles
        LEFT JOIN t_roles_permission ON t_roles.id = t_roles_permission.t_roles_id
        LEFT JOIN t_permission ON t_permission.id = t_roles_permission.t_permission_id
        ORDER BY
            t_roles.id DESC
    </select>
    <select id="selectRoleWithPermissionById" resultMap="RolesWithType">
        SELECT
            t_roles.*, t_permission.id AS permissionId,
            t_permission.create_time AS permissionCreateTime,
            t_permission.permission_code AS permissionCode,
            t_permission.permission_name AS permissionName,
            t_permission.permission_type AS permissionType,
            t_permission.permission_url AS permissionUrl,
            t_permission.update_time AS permissionUpdateTime,
            t_permission.parent_id AS parentId
        FROM
            t_roles
        LEFT JOIN t_roles_permission ON t_roles.id = t_roles_permission.t_roles_id
        LEFT JOIN t_permission ON t_permission.id = t_roles_permission.t_permission_id
        where t_roles.id = #{id}
    </select>
    <select id="selectRoleByAccountId" resultType="com.ksit.tms.entity.Roles">
        select
        *
        from
        t_roles
        where id in (
          select
            t_roles_id
            from
            t_account_roles
            where
            t_account_id = #{id}
        )

    </select>

    <resultMap id="RolesWithType" type="com.ksit.tms.entity.Roles" extends="BaseResultMap">
        <collection property="permissionList" ofType="Permission">
            <id column="permissionId" property="id"/>
            <result column="permissionCreateTime" property="createTime"/>
            <result column="permissionCode" property="permissionCode"/>
            <result column="permissionName" property="permissionName"/>
            <result column="permissionType" property="permissionType"/>
            <result column="permissionUrl" property="permissionUrl"/>
            <result column="permissionUpdateTime" property="updateTime"/>
            <result column="parentId" property="parentId"></result>
        </collection>
    </resultMap>


    <update id="updateByExampleSelective" parameterType="map">
        update t_roles
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.rolesName != null">
                roles_name = #{record.rolesName,jdbcType=VARCHAR},
            </if>
            <if test="record.rolesCode != null">
                roles_code = #{record.rolesCode,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_roles
        set id = #{record.id,jdbcType=INTEGER},
        roles_name = #{record.rolesName,jdbcType=VARCHAR},
        roles_code = #{record.rolesCode,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ksit.tms.entity.Roles">
        update t_roles
        <set>
            <if test="rolesName != null">
                roles_name = #{rolesName,jdbcType=VARCHAR},
            </if>
            <if test="rolesCode != null">
                roles_code = #{rolesCode,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ksit.tms.entity.Roles">
    update t_roles
    set roles_name = #{rolesName,jdbcType=VARCHAR},
      roles_code = #{rolesCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>