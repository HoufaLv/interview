<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iw.tms.mapper.RolesMapper">
  <resultMap id="BaseResultMap" type="com.iw.tms.entity.Roles">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="roles_name" jdbcType="VARCHAR" property="rolesName" />
    <result column="roles_code" jdbcType="VARCHAR" property="rolesCode" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, roles_name, roles_code, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.iw.tms.entity.RolesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from roles
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from roles
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from roles
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.iw.tms.entity.RolesExample">
    delete from roles
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iw.tms.entity.Roles">
    insert into roles (id, roles_name, roles_code, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{rolesName,jdbcType=VARCHAR}, #{rolesCode,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.iw.tms.entity.Roles" useGeneratedKeys="true" keyProperty="id">
    insert into roles
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="rolesName != null">
        roles_name,
      </if>
      <if test="rolesCode != null">
        roles_code,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rolesName != null">
        #{rolesName,jdbcType=VARCHAR},
      </if>
      <if test="rolesCode != null">
        #{rolesCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iw.tms.entity.RolesExample" resultType="java.lang.Long">
    select count(*) from roles
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <select id="selectAllRolesWithPermission" resultMap="rolesWithPermission">
      SELECT
        roles.*, permission.id AS permissionId,
        permission.permission_name AS permissionName,
        permission.permission_code AS permissionCode,
        permission.permission_type AS permissionType,
        permission.create_time AS permissionCreateTime,
        permission.update_time AS permissionUpdateTime,
        permission.permission_url AS permissionUrl,
        permission.parent_id as parentId
      FROM
          roles
      LEFT JOIN roles_permission ON roles.id = roles_permission.t_roles_id
      LEFT JOIN permission ON roles_permission.t_permission_id = permission.id
      ORDER BY
          roles.id DESC
  </select>
  <!--根据账号查询对应的角色信息,查询角色id in()-->
    <select id="selectRolesByAccountId" resultType="com.iw.tms.entity.Roles">
    select * from  roles  where id in (
      select t_roles_id from account_roles where t_account_id = #{accountid}
    )
    </select>
    <!--返回的类型,已经继承BaseResultMap之后,就不需要再封装BaseResultMap中的东西了,只需要封装额外的属性-->
  <resultMap id="rolesWithPermission" type="com.iw.tms.entity.Roles" extends="BaseResultMap">
    <collection property="permissionList" ofType="com.iw.tms.entity.Permission">
      <id property="id" column="permissionId"/>
      <result property="permissionName" column="permissionName"/>
      <result property="permissionCode" column="permissionCode"/>
      <result property="permissionType" column="permissionType"/>
      <result property="createTime" column="permissionCreateTime"/>
      <result property="updateTime" column="permissionUpdateTime"/>
      <result property="permissionUrl" column="permissionUrl"/>
      <result property="parentId" column="parentId"/>
    </collection>
  </resultMap>

  <update id="updateByExampleSelective" parameterType="map">
    update roles
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.rolesName != null">
        roles_name = #{record.rolesName,jdbcType=VARCHAR},
      </if>
      <if test="record.rolesCode != null">
        roles_code = #{record.rolesCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update roles
    set id = #{record.id,jdbcType=INTEGER},
      roles_name = #{record.rolesName,jdbcType=VARCHAR},
      roles_code = #{record.rolesCode,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iw.tms.entity.Roles">
    update roles
    <set>
      <if test="rolesName != null">
        roles_name = #{rolesName,jdbcType=VARCHAR},
      </if>
      <if test="rolesCode != null">
        roles_code = #{rolesCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iw.tms.entity.Roles">
    update roles
    set roles_name = #{rolesName,jdbcType=VARCHAR},
      roles_code = #{rolesCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>