<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iw.tms.mapper.AccountMapper">
    <resultMap id="BaseResultMap" type="com.iw.tms.entity.Account">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="account_name" jdbcType="VARCHAR" property="accountName"/>
        <result column="account_mobile" jdbcType="VARCHAR" property="accountMobile"/>
        <result column="account_password" jdbcType="VARCHAR" property="accountPassword"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="account_state" jdbcType="VARCHAR" property="accountState"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, account_name, account_mobile, account_password, create_time, update_time, account_state
  </sql>
    <select id="selectByExample" parameterType="com.iw.tms.entity.AccountExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from account
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from account
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.iw.tms.entity.AccountExample">
        delete from account
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.iw.tms.entity.Account">
    insert into account (id, account_name, account_mobile, 
      account_password, create_time, update_time, 
      account_state)
    values (#{id,jdbcType=INTEGER}, #{accountName,jdbcType=VARCHAR}, #{accountMobile,jdbcType=VARCHAR}, 
      #{accountPassword,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{accountState,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.iw.tms.entity.Account" useGeneratedKeys="true" keyProperty="id">
        insert into account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="accountName != null">
                account_name,
            </if>
            <if test="accountMobile != null">
                account_mobile,
            </if>
            <if test="accountPassword != null">
                account_password,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="accountState != null">
                account_state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="accountName != null">
                #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="accountMobile != null">
                #{accountMobile,jdbcType=VARCHAR},
            </if>
            <if test="accountPassword != null">
                #{accountPassword,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="accountState != null">
                #{accountState,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.iw.tms.entity.AccountExample" resultType="java.lang.Long">
        select count(*) from account
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <!--动态搜索-->
    <select id="selectAllAccountWithRolesByQueryParam" resultMap="accountWithRolesMap">
        SELECT
        account.*,
        roles.id as rolesId,
        roles.roles_name as rolesName,
        roles.roles_code as rolesCode,
        roles.create_time as rolesCreateTime,
        roles.update_time as rolesUpdateTime
        FROM
        account
        LEFT JOIN account_roles ON account.id = account_roles.t_account_id
        LEFT JOIN roles ON account_roles.t_roles_id = roles.id
        <choose>
            <when test="rolesId != null and rolesId != 0">
                inner join (
                select
                id
                from
                account
                inner join account_roles on account_roles.t_account_id = account.id
                <where>
                    account_roles.t_roles_id = #{rolesId}
                    <if test="nameMobile != null and nameMobile !=''">
                        and((account.account_name like concat('%',#{nameMobile},'%'))
                        or
                        (account.account_mobile like concat('%',#{nameMobile},'%')))
                    </if>
                </where>
                ) as temp on account.id = temp.id
            </when>
            <otherwise>
                <if test="nameMobile!=null and nameMobile !=''">
                    (account.account_name like concat('%',#{nameMobile},'%'))
                    or
                    (account.account_mobile like concat('%',#{nameMobile},'%'))
                </if>
            </otherwise>
        </choose>
        order by account.id desc
    </select>

    <resultMap id="accountWithRolesMap" type="com.iw.tms.entity.Account" extends="BaseResultMap">
        <collection property="rolesList" ofType="com.iw.tms.entity.Roles">
            <id column="rolesId" property="id"/>
            <result column="rolesName" property="rolesName"/>
            <result column="rolesCode" property="rolesCode"/>
            <result column="rolesCreateTime" property="createTime"/>
            <result column="rolesUpdateTIme" property="updateTime"/>
        </collection>
    </resultMap>

    <update id="updateByExampleSelective" parameterType="map">
        update account
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.accountName != null">
                account_name = #{record.accountName,jdbcType=VARCHAR},
            </if>
            <if test="record.accountMobile != null">
                account_mobile = #{record.accountMobile,jdbcType=VARCHAR},
            </if>
            <if test="record.accountPassword != null">
                account_password = #{record.accountPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.accountState != null">
                account_state = #{record.accountState,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update account
        set id = #{record.id,jdbcType=INTEGER},
        account_name = #{record.accountName,jdbcType=VARCHAR},
        account_mobile = #{record.accountMobile,jdbcType=VARCHAR},
        account_password = #{record.accountPassword,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        account_state = #{record.accountState,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.iw.tms.entity.Account">
        update account
        <set>
            <if test="accountName != null">
                account_name = #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="accountMobile != null">
                account_mobile = #{accountMobile,jdbcType=VARCHAR},
            </if>
            <if test="accountPassword != null">
                account_password = #{accountPassword,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="accountState != null">
                account_state = #{accountState,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.iw.tms.entity.Account">
    update account
    set account_name = #{accountName,jdbcType=VARCHAR},
      account_mobile = #{accountMobile,jdbcType=VARCHAR},
      account_password = #{accountPassword,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      account_state = #{accountState,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>